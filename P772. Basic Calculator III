# stack
# time O(n)

class Solution(object):
    def calculate(self, s):
        num = 0
        op = '+'

        stack = []

        def helper(op, num):
            if op == '+':
                stack.append(num)
            elif op == '-':
                stack.append(-num)
            elif op == '*':
                stack.append(stack.pop() * num)
            elif op == '/':
                stack.append(int(stack.pop() / num))
        
        for i in range(len(s)):
            if s[i].isdigit():
                num = num * 10 + int(s[i])
            elif s[i] == '(':
                stack.append(op)
                num = 0
                op = '+'
            elif s[i] in ['+', '-', '*', '/', ')']:
                helper(op, num)
                if s[i] == ')':
                    num = 0
                    while isinstance(stack[-1], int):
                        num += stack.pop()
                    op = stack.pop()
                    helper(op, num)
                num = 0
                op = s[i]
        helper(op, num)
        return sum(stack)
                    


class Solution(object):
    def calculate(self, s):
        """
        :type s: str
        :rtype: int
        """
        cur, state, temp, ans, sign, stack = 0, 1, 0, 0, 0, collections.deque([])
        # sign * //
        # state +1, -1
        for i in s + "+":
            if i.isdigit():
                cur = cur * 10 + int(i)
            elif i == "(":
                stack += (sign, state, ans, temp),
                ans, sign, state, temp = 0, 0, 1, 0
            elif i != " ":
                if sign == 1:
                    temp *= cur
                elif sign == 2:
                    temp //= cur
                else:
                    temp = cur
                if i == ")":
                    cur = ans + state * temp
                    sign, state, ans, temp = stack.pop()
                elif i in "-+":
                    ans += state * temp
                    sign, temp, cur, state = 0, 0, 0, 1 if i == "+" else -1
                elif i in "*/":
                    cur, sign = 0, 1 if i == "*" else 2
        return ans
        
