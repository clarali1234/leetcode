算法：

- 我们需要逐行分析源代码。有两种情况，要么在一个注释内或者不在。
如果我们遇到注释块符号，而我们不在注释中，那么我们将跳过接下来的两个字符，并将状态更改为在注释中。
如果我们遇到注释块符号并且我们在注释中，那么我们将跳过接下来的两个字符并将状态更改为不在注释中。
如果我们遇到一个行注释且我们不在注释中，那么我们将忽略该行的其余部分。
如果我们不在注释中（并且它不是注释的开头），我们将记录所遇到的字符。
在每行的末尾，如果我们不在注释中，我们将记录该行。

# time O(S), S 指的是源代码的长度。
# space O(S)
class Solution:
    def removeComments(self, source: List[str]) -> List[str]:
        res = []
        inblock = False
        for s in source:
            if not inblock:    
                line = ''
            i = 0
            while i < len(s):
                if s[i : i + 2] == '/*' and not inblock:
                    inblock = True
                    i += 2
                elif s[i : i + 2] == '*/' and inblock:
                    inblock = False
                    i += 2
                elif s[i : i + 2] == '//' and not inblock:
                    break
                elif not inblock:
                    line += s[i]
                    i += 1
                else:
                    i += 1
            if line and not inblock:
                res.append(line)
        return res
        
