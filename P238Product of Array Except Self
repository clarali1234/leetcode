# 第一次遍历在结果数组里保存每个数字左边的数字乘积，第二个遍历保存的是左边乘积和这个数字右边的乘积的乘积。

# time O(n)
# space O(1)

class Solution(object):
    def productExceptSelf(self, nums):
       
        res = [1 for _ in range(len(nums))]
        product = 1
        for i in range(len(nums)):
            res[i] = product
            product = product * nums[i]
            
        product2 = 1
        for j in range(len(nums)- 1, -1, -1):
            res[j] = res[j] * product2
            product2 = product2 * nums[j]
        return res
