
class Solution(object):
    def minimumSemesters(self, n, relations):
        graph = {i : [] for i in range(1, n + 1)}
        indegrees = {i : 0 for i in range(1, n + 1)}
        
        for i, j in relations:
            # prev -> nxt 
            graph[i].append(j)
            indegrees[j] += 1

        q = collections.deque([])
        res = 0
        for i, indegree in indegrees.items():
            if indegree == 0:
                q.append(i)
        if not q:
            return -1

        while q:
            for _ in range(len(q)):
                node = q.popleft()
                for nb in graph[node]:
                    indegrees[nb] -= 1
                    if indegrees[nb] == 0:
                        q.append(nb)
            res += 1
        
        for k, v in indegrees.items():
            if v != 0:
                return -1
        return res
