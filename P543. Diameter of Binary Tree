# 最长路径有两种情况：
# 1.最长条路径经过根节点，那么只需要找出根节点的左右两棵子树的最大深度然后相加即可。
# 2.最长路径没有经过根节点，那么只需要找出根节点的左子树或者根节点的右子树作为根的最长路径度即可。递归调用，
# 自底向上查找子树的深度，如果某一个左子树与右子树深度之和大于当前纪录的直径，那么替换为当前直径，递归完成之后即可找出直径。

# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution:
    def diameterOfBinaryTree(self, root: TreeNode) -> int:
        if not root:
            return 0
        
        self.res = 0
        self.dfs(root)
        return self.res
        
    def dfs(self, node):
        if not node:
            return 0
        
        left = self.dfs(node.left)
        right = self.dfs(node.right)
        # max path start a new path, hightest point is the current node
        self.res = max(self.res, left + right)
        # continue with the current path
        return 1 + max(left, right)

