# 
1. 最长路径： 全局，必须经过两个跟节点（关键）
2. dfs: input: root, output: height under this node
3. 递归的部分: 从叶子开始向上递归， 更新全局变量 max = (max, 左 + 右), 返回max(左，右) + 1

# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution(object):
    def diameterOfBinaryTree(self, root):
        """
        :type root: TreeNode
        :rtype: int
        """
        if not root:
            return 0
        
        self.res = 0
        self.dfs(root)
        return self.res


    def dfs(self, node): 
        if not node: 
            return 0
        
        # pass current node
        l = self.dfs(node.left) # left subtree height
        r = self.dfs(node.right)
        self.res = max(self.res, l + r)
        return max(l, r) + 1

        
