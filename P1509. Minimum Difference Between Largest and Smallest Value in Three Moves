'''
[1,5,0,10,14]

[0, 1, 5, 10, 14]

change up to 3 moves

0, 1 , 2, 3

largest 4 elements: 1, 5, 10, 14 (nlg4) (
smallest 4 elements:10, 5, 1, 0
就分成4种情况
砍三次珠峰
砍两次珠峰，填一次海沟
砍一次珠峰，填两次海沟
填三次海沟

0,3; 1, 2; 2,1; 3, 0

l1[i] - l2[4 - i]

if len <= 4: return 0

diff: min(4, 5, 4, 1)
'''
# time O(n)
# space O(n)

from heapq import *
import sys

class Solution:
    def minDifference(self, nums):
        if nums == None:
            return 0
        if len(nums) <= 4:
            return 0
        
        min_heap = []
        max_heap = []
        for num in nums:
            heappush(min_heap, num)
            heappush(max_heap, -num)
            if len(min_heap) > 4:
                heappop(min_heap)
            if len(max_heap) > 4:
                heappop(max_heap)
        
        top4 = []
        bottom4 = []
        while min_heap:
            top4.append(heappop(min_heap))
        while max_heap:
            bottom4.append(-heappop(max_heap))
            
        print('top4', top4)
        print('bottom4', bottom4)
        res = sys.maxsize
        for i in range(4):
            res = min(res, top4[i] - bottom4[3 - i])
        return res

test = Solution()
l = [1,5,0,10,14]  # 2, 3, 4, 5, 7, 8
print(test.minDifference(l))
