
# sol1
# two pointers
# time O(n), space O(1)
version 1

class Solution(object):
    def swapPairs(self, head):
        
        if not head:
            return None
        if not head.next:
            return head
        
        dummy = ListNode(0)
        dummy.next = head
        
        prev = dummy
        cur = head
        while cur and cur.next:
            tmp = cur.next.next
            prev.next = cur.next
            cur.next.next = cur
            cur.next = tmp
            cur = cur.next
            prev = prev.next.next
        
        return dummy.next
            
           
class Solution:
    def swapPairs(self, head: ListNode) -> ListNode:
        if not head or not head.next:
            return None
        
        dummy = ListNode(0, head)
        p = dummy
        while p.next and p.next.next:
            p1 = p.next
            p2 = p1.next
            nxt = p2.next 
            
            p.next = p2
            p2.next = p1
            p1.next = nxt
            
            p = p1
        return dummy.next
         
  # recursion
class Solution(object):
    def swapPairs(self, head):
        """
        :type head: ListNode
        :rtype: ListNode
        """
        if not head or not head.next:
            return head
        second = head.next
        head.next = self.swapPairs(second.next)
        second.next = head
        return second
            
