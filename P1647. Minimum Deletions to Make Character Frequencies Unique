
# greedy
# time O(n)
# space O(1)

# greedy
# count the occurance of each char
# use the set to holder all the count
# interate each char, count in hashmap
# if the count is duplicate, delete once char at a time, until count is not in set and count is not 0

class Solution:
    def minDeletions(self, s: str) -> int:
        counter = collections.Counter(s)
        freq_set = set()
        res = 0
        for char, freq in counter.items():
            while freq and freq in freq_set:
                freq -= 1
                res += 1
            freq_set.add(freq)
        return res
