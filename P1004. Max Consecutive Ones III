# 思路：
two pointers , sliding window, 
# 维护一个k>0的window
#time O(n)
# space O(1)

# sliding window实现方法, for 循环的pointer 一定不是contract的那个

class Solution(object):
    def longestOnes(self, nums, k):
        res = 0
        num_zeros = 0
        l = 0
        for r in range(len(nums)):
            if nums[r] == 0:
                num_zeros += 1

            while num_zeros > k:
                if nums[l] == 0:
                    num_zeros -= 1
                l += 1
            
            res = max(r - l + 1, res)
        return res
                    
                    
            
