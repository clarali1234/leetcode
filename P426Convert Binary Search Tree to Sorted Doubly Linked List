# divide and conquer (因为sorted)
# 递归 
time O(n), space O(h)

class Solution(object):
    def treeToDoublyList(self, root):
        
        if not root:
            return None

        h, t = self.dfs(root)
        return h

    def dfs(self, node):
        h, t = node, node
        if node.left:
            h, l_t = self.dfs(node.left)
            node.left = l_t
            l_t.right = node

        if node.right:
            r_h, t = self.dfs(node.right)
            node.right = r_h
            r_h.left = node

        h.left = t
        t.right = h
        return h, t

