# 知道思路即可
# hash: key:element, value:[] indices of elements in array
# array [[val, pos] array中每一个元素，第一部分是element的数值，第二个元素是该数值的index在hash表value中的位置

insert delete, hashtable O(1)
get random array O(1)



class RandomizedSet(object):

    def __init__(self):
        """
        Initialize your data structure here.
        """
        self.nums = []
        # key : num, value: pos in nums list
        self.pos = {}
        

    def insert(self, val):
        """
        Inserts a value to the set. Returns true if the set did not already contain the specified element.
        :type val: int
        :rtype: bool
        """
        if val in self.pos:
            return False
        self.nums.append(val)
        self.pos[val] = len(self.nums) - 1
        return True
        
        

    def remove(self, val):
        """
        Removes a value from the set. Returns true if the set contained the specified element.
        :type val: int
        :rtype: bool
        """
        if val not in self.pos:
            return False
        idx = self.pos[val]
        tail = self.nums.pop()
        
        if idx < len(self.nums):
            self.nums[idx] = tail
            self.pos[tail] = idx
        del self.pos[val]
        return True

    def getRandom(self):
        """
        Get a random element from the set.
        :rtype: int
        """
        return self.nums[random.randint(0, len(self.nums)-1)]
        


# Your RandomizedSet object will be instantiated and called as such:
# obj = RandomizedSet()
# param_1 = obj.insert(val)
# param_2 = obj.remove(val)
# param_3 = obj.getRandom()
