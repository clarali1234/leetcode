# divide and conquer
# time O(n)
# space O(lgn)

class Solution(object):
    def sortedArrayToBST(self, nums):
        """
        :type nums: List[int]
        :rtype: TreeNode
        """
        if not nums:
            return None
        l = 0
        r = len(nums) - 1
        return self.dfs(nums, l, r)
    
    def dfs(self, nums, l, r):
        if l > r:
            return 
        
        m = (l + r) // 2
        root = TreeNode(nums[m])
        root.left = self.dfs(nums, l, m - 1)
        root.right = self.dfs(nums, m + 1, r)
        return root
        
