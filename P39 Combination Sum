# combination dfs recursion'
# time complexity: O(n^(T/m)+1)
# < len(nums) ** max_count 

- Combination Sum 限制了组合中的数之和
• 加入一个新的参数来限制

- Subsets 无重复元素，Combination Sum 有重复元素
• 需要先去重

- Subsets 一个数只能选一次，Combination Sum 一个数可以选很多次
• 搜索时从 index 开始而不是从 index + 1


class Solution(object):
    def combinationSum(self, candidates, target):
        

        self.res = []
        self.dfs(candidates, target, 0, 0, [])
        return self.res
    
    
    def dfs(self, nums, target, index, cur_sum, cur_path):
        if cur_sum > target:
            return 
        
        if cur_sum == target:
            self.res.append(cur_path)
            return 
        
        for i in range(index, len(nums)):
            self.dfs(nums, target, i, cur_sum + nums[i], cur_path + [nums[i]])
