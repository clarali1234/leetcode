

# time O(m + n)
# space O(1)

class Solution:
    def minSteps(self, s: str, t: str) -> int:
        c_s = collections.Counter(s)
        res = 0
        for char in t:
            if char in c_s:
                c_s[char] -= 1
                if c_s[char] == 0:
                    del c_s[char]
            else:
                res += 1
        return res


class Solution(object):
    def minSteps(self, s, t):
        
        c_s = collections.Counter(s)
        c_t = collections.Counter(t)

        count = 0
        for k,v in c_s.items():
            if k not in c_t:
                count += v
            else:
                if v > c_t[k]:
                    count += v - c_t[k]
        
        return count
                
