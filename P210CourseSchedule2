# BFS
# same as CourseSchedule

graph = {i : set() for i in range(numCourses)}
        degrees = {i : 0 for i in range(numCourses)}
        
        # j -> i
        for i, j in prerequisites:
            if i not in graph[j]:
                graph[j].add(i)
                degrees[i] += 1

        
        # topo sort
        q = collections.deque([])
        for course, indeg in degrees.items():
            if indeg == 0:
                q.append(course)
        res = []
        
        print(graph)
        print(degrees)
        while q:
            cur_node = q.popleft()
            res.append(cur_node)
            for nb in graph[cur_node]:
                degrees[nb] -= 1
                if degrees[nb] == 0:
                    q.append(nb)
                    
        print(res)
        if len(res) == numCourses:
            return res
        return []
                             
                
        
        
        
        
